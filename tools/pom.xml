<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.sbolo.syk</groupId>
    <artifactId>parent-prj</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <relativePath>../parent-prj/pom.xml</relativePath>
  </parent>

  <groupId>com.sbolo.syk.oth.common</groupId>
  <artifactId>tools</artifactId>

<dependencies>
<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-lang3</artifactId>
</dependency>
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-api</artifactId>
</dependency>
<dependency>
    <groupId>com.squareup.okhttp3</groupId>
    <artifactId>okhttp</artifactId>
</dependency>
<dependency>
    <groupId>com.squareup.okio</groupId>
    <artifactId>okio</artifactId>
</dependency>
<dependency>
	<groupId>com.alibaba</groupId>
	<artifactId>fastjson</artifactId>
</dependency>
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-websocket</artifactId>
</dependency>

<dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-aop</artifactId>
</dependency>
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-data-redis</artifactId>
</dependency>
<dependency>
    <groupId>org.javassist</groupId>
    <artifactId>javassist</artifactId>
</dependency>
<dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
</dependency>
</dependencies>
<build>
<finalName>tools</finalName>
<plugins>
	<plugin>
         <groupId>com.github.wvengen</groupId>
         <artifactId>proguard-maven-plugin</artifactId>
         <!-- <version>2.0.13</version> --> <!-- 不写版本号，采用最新的版本 -->
         <executions>
             <execution>
                 <!-- 混淆时刻，这里是打包的时候混淆-->
                 <phase>package</phase>
                 <goals>
                     <!-- 使用插件的什么功能，当然是混淆-->
                     <goal>proguard</goal>
                 </goals>
             </execution>
         </executions>
         <configuration>
         	<!-- 是否混淆-->
         	<obfuscate>true</obfuscate>
         	<!-- 采用外部配置文件 -->
            <proguardInclude>${basedir}/proguard.cfg</proguardInclude>
            <!-- 是否将生成的PG文件安装部署-->
            <attach>true</attach>
            <!-- 指定生成文件分类 -->
            <attachArtifactClassifier>proguard</attachArtifactClassifier>
            <!--指定混淆的对象，对target目录下的classes目录进行混淆-->
            <!-- <injar>classes</injar> -->
            <!-- 混淆后输出的jar包名字，默认是 原包名-proguard.jar -->
            <outjar>abc-pg.jar</outjar>  <!-- 设置了无效，原因不明 --> 
			<outputDirectory>${project.build.directory}</outputDirectory>
			<libs>
                <!-- 添加java依赖，rt.jar必须添加 -->
				<lib>${java.home}/lib/rt.jar</lib>
				<lib>${java.home}/lib/jce.jar</lib>
                <lib>${java.home}/lib/jsse.jar</lib>
            </libs>
            <addMavenDescriptor>false</addMavenDescriptor>
            <!-- 加载文件的过滤器，就是你的工程目录了-->
            <!-- <inFilter>/**</inFilter> -->
            <!-- 输出目录 -->
        </configuration>
        <!-- 指定插件所使用的jar包以及版本 -->
		<dependencies>
			<dependency>
				<groupId>net.sf.proguard</groupId>
				<artifactId>proguard-base</artifactId>
				<version>6.0.3</version>
			</dependency>
		</dependencies>
     </plugin>
</plugins>
</build>
</project>