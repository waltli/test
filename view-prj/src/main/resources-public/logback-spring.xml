<?xml version="1.0" encoding="UTF-8"?>
<configuration  scan="true" scanPeriod="60 seconds" debug="false">

    <!-- 读取application.yml中app的属性值 -->
    <springProperty scope="context" name="appName" source="app.name" defaultValue="noAppName"/>
	<springProperty scope="context" name="appContext" source="app.context" defaultValue="noAppContext"/>
    
    <!-- 上下文名称 -->
    <contextName>${appContext}</contextName>
    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%15.15t] %-5level %logger{36} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!--输出到文件-->
    <appender name="fileInfo" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/${appContext}/${appName}_log_info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.dir}/${appContext}/${appName}_log_info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
           	<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>5MB</maxFileSize>    
            </timeBasedFileNamingAndTriggeringPolicy>  
		    <maxHistory>60</maxHistory>
		    <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <append>true</append>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%15.15t] %-5level %logger{36} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>
    
    <!-- 日志记录器，日期滚动记录 -->
    <appender name="fileError" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.dir}/${appContext}/${appName}_log_error.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。  而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${log.dir}/${appContext}/${appName}_log_error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 除按日志记录之外，还配置了日志文件不能超过5M，若超过5M，日志文件会以索引0开始， 命名日志文件，例如log-error-2013-12-21.0.log -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>5MB</maxFileSize>    
            </timeBasedFileNamingAndTriggeringPolicy>
		    <maxHistory>60</maxHistory>
		    <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <!-- 追加方式记录日志 -->
        <append>true</append>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%15.15t] %-5level %logger{36} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
        <!-- 此日志文件只记录error级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <root level="info">
        <appender-ref ref="console" />
        <appender-ref ref="fileInfo" />
        <appender-ref ref="fileError" />
    </root>
    
    <!-- 需要输出sql语句时请改为debug -->
    <logger name="com.sbolo.syk.${appName}.mapper" level="info" additivity="false">  
	    <appender-ref ref="console"/>  
	    <appender-ref ref="fileInfo" />
	</logger>
</configuration>